document.addEventListener('DOMContentLoaded', () => {
    // --- CONFIGURATION ---
    // URL for the JSON data file generated by the Python script.
    const DATA_URL = 'data/shipments_by_day.json';
    // Number of table rows to display per slide. Adjust for best fit on your display.
    const ROWS_PER_SLIDE = 25; 
    // Time in milliseconds for each slide to be visible.
    const SLIDER_INTERVAL = 10000; // 10 seconds

    /**
     * Fetches data from the JSON file and initiates the table creation process.
     * This is the main entry point of the script.
     */
    async function loadAndDisplayData() {
        const container = document.getElementById('slider-container');
        if (!container) {
            console.error('Error: A container element with id "slider-container" was not found.');
            return;
        }

        try {
            const response = await fetch(DATA_URL);
            if (!response.ok) {
                throw new Error(`HTTP error! Status: ${response.status}`);
            }
            const dataByDay = await response.json();
            
            // Hide the initial loading message
            const loadingMessage = document.getElementById('loading-message');
            if(loadingMessage) {
                loadingMessage.style.display = 'none';
            }

            // Start the process of building the UI
            createTableSlides(dataByDay);

        } catch (error) {
            console.error('Failed to load shipment data:', error);
            container.innerHTML = `<div class="flex items-center justify-center h-full"><p class="text-2xl text-red-500">Error loading data. Please check the console.</p></div>`;
        }
    }

    /**
     * Creates and populates table slides based on the fetched shipment data.
     * @param {object} data - The shipment data grouped by day of the week.
     */
    function createTableSlides(data) {
        const container = document.getElementById('slider-container');
        container.innerHTML = ''; // Clear container of any previous content (like loading message)

        // Flatten the data from the object into a single, ordered array for easier processing.
        const allRows = [];
        const daysOrder = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"];
        
        daysOrder.forEach(day => {
            if (data[day] && Array.isArray(data[day])) {
                data[day].forEach(item => {
                    allRows.push({
                        day: day,
                        ...item
                    });
                });
            }
        });

        // If there's no data, display a message and stop.
        if (allRows.length === 0) {
             container.innerHTML = `<div class="flex items-center justify-center h-full"><p class="text-2xl text-gray-500">No shipment data available.</p></div>`;
             return;
        }

        // Loop through the flattened data in chunks to create slides.
        for (let i = 0; i < allRows.length; i += ROWS_PER_SLIDE) {
            const slideChunk = allRows.slice(i, i + ROWS_PER_SLIDE);
            
            // Create the main slide container element.
            const slide = document.createElement('div');
            slide.className = 'slide';

            // Create a wrapper for the table to help with layout.
            const tableWrapper = document.createElement('div');
            tableWrapper.className = 'table-wrapper';

            const table = document.createElement('table');
            table.className = 'data-table';

            // Create and append the table header.
            table.innerHTML = `
                <thead>
                    <tr>
                        <th class="w-1/6">Day</th>
                        <th class="w-3/6">Customer Reference</th>
                        <th class="w-1/6">Arrival</th>
                        <th class="w-1/6">Departure</th>
                    </tr>
                </thead>
            `;

            // Create and populate the table body with data for the current slide.
            const tbody = document.createElement('tbody');
            slideChunk.forEach(rowData => {
                const tr = document.createElement('tr');
                tr.innerHTML = `
                    <td>${rowData.day || 'N/A'}</td>
                    <td>${rowData.customer_reference || 'N/A'}</td>
                    <td>${rowData.arrival || 'N/A'}</td>
                    <td>${rowData.departure || 'N/A'}</td>
                `;
                tbody.appendChild(tr);
            });
            table.appendChild(tbody);
            
            // Assemble the slide and add it to the main container.
            tableWrapper.appendChild(table);
            slide.appendChild(tableWrapper);
            container.appendChild(slide);
        }
        
        // After creating all slides, initialize the slider functionality.
        setupSlider();
    }

    /**
     * Initializes and controls the automatic slide transitions.
     */
    function setupSlider() {
        const slides = document.querySelectorAll('#slider-container .slide');
        if (slides.length === 0) return;

        let currentSlide = 0;

        const showSlide = (index) => {
            slides.forEach((slide, i) => {
                // The 'active' class controls the slide's visibility (opacity).
                slide.classList.toggle('active', i === index);
            });
        };

        // Show the first slide immediately on load.
        showSlide(currentSlide);

        // Only set up the automatic transition if there is more than one slide.
        if (slides.length > 1) {
            setInterval(() => {
                currentSlide = (currentSlide + 1) % slides.length;
                showSlide(currentSlide);
            }, SLIDER_INTERVAL);
        }
    }

    // Initial call to start the entire process.
    loadAndDisplayData();
});
